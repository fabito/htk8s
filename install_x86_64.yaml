# This is an auto-generated file. DO NOT EDIT
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: htpc
  name: htpc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: bazarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 6767
    protocol: TCP
    targetPort: 6767
  selector:
    app: htpc
    run: bazarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: emby
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 8096
    protocol: TCP
    targetPort: 8096
  selector:
    app: htpc
    run: emby
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: jackett
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 9117
    protocol: TCP
    targetPort: 9117
  selector:
    app: htpc
    run: jackett
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: radarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 7878
    protocol: TCP
    targetPort: 7878
  selector:
    app: htpc
    run: radarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: sonarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 8989
    protocol: TCP
    targetPort: 8989
  selector:
    app: htpc
    run: sonarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: transmission
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app: htpc
    run: transmission
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: bazarr
  name: bazarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: bazarr
  template:
    metadata:
      labels:
        app: htpc
        run: bazarr
    spec:
      containers:
      - env:
        - name: TZ
          value: Australia/Perth
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/bazarr:v0.9.2-ls106
        name: bazarr
        ports:
        - containerPort: 6767
          name: webui
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: bazarr
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
      initContainers:
      - command:
        - sh
        - -c
        - until wget -qO- sonarr:8989/sonarr &> /dev/null && wget -qO- radarr:7878/radarr
          &> /dev/null; do echo waiting for sonarr and radarr; sleep 2; done;
        image: busybox
        name: wait-for-sonarr-and-radarr
      - command:
        - sh
        - -c
        - "mkdir -p /htpc/bazarr/config\nexport RADARR_API_KEY=$(cat /htpc/radarr/config.xml
          | sed -ne \"/ApiKey/{s/.*<ApiKey>\\(.*\\)<\\/ApiKey>.*/\\1/p;q;}\")\nexport
          SONARR_API_KEY=$(cat /htpc/sonarr/config.xml | sed -ne \"/ApiKey/{s/.*<ApiKey>\\(.*\\)<\\/ApiKey>.*/\\1/p;q;}\")\ncat
          << EOF > /htpc/bazarr/config/config.ini\n[sonarr]\napikey = ${SONARR_API_KEY}\nfull_update
          = Daily\nip = sonarr\nonly_monitored = False\nbase_url = /sonarr\nssl =
          False\nport = 8989\n\n[radarr]\napikey = ${RADARR_API_KEY}\nfull_update
          = Daily\nip = radarr\nonly_monitored = False\nbase_url = /radarr\nssl =
          False\nport = 7878\n\n[general]\nmovie_default_hi = False\nmovie_default_language
          = []\nip = 0.0.0.0\nuse_scenename = True\nuse_postprocessing = False\nenabled_providers
          = subscene,tvsubtitles\nauto_update = True\nport = 6767\nuse_radarr = True\nbase_url
          = /bazarr/\npage_size = 25\nminimum_score_movie = 70\nbranch = master\nsingle_language
          = False\nuse_sonarr = True\nserie_default_hi = False\npath_mappings_movie
          = [['/movies', '/movies'], ['', ''], ['', ''], ['', ''], ['', '']]\nserie_default_enabled
          = False\nmovie_default_enabled = False\nserie_default_language = []\npath_mappings
          = [['/tv', '/tv'], ['', ''], ['', ''], ['', ''], ['', '']]\npostprocessing_cmd
          = \nminimum_score = 90\ndebug = False\nuse_embedded_subs = True\nadaptive_searching
          = False\nEOF\n"
        image: busybox
        name: config
        volumeMounts:
        - mountPath: /htpc
          name: htpc-home
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: emby
  name: emby
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: emby
  template:
    metadata:
      labels:
        app: htpc
        run: emby
    spec:
      containers:
      - env:
        - name: TZ
          value: Australia/Perth
        - name: UID
          value: "1000"
        - name: GID
          value: "1000"
        image: emby/embyserver:4.6.0.30
        name: emby
        ports:
        - containerPort: 8096
          name: webui
          protocol: TCP
        - containerPort: 8920
          name: webui-ssl
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: emby
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: jackett
  name: jackett
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: jackett
  template:
    metadata:
      labels:
        app: htpc
        run: jackett
    spec:
      containers:
      - env:
        - name: TZ
          value: Australia/Perth
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/jackett:v0.17.656-ls23
        name: jackett
        ports:
        - containerPort: 9117
          name: webui
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jackett
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
      initContainers:
      - args:
        - 'echo start; [[ ! -f /config/Jackett/ServerConfig.json ]] && mkdir -p /config/Jackett/
          &&  echo ''{ "BasePathOverride": "/jackett"}'' > /config/Jackett/ServerConfig.json;
          echo end;'
        command:
        - sh
        - -c
        image: busybox
        name: config
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jackett
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: radarr
  name: radarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: radarr
  template:
    metadata:
      labels:
        app: htpc
        run: radarr
    spec:
      containers:
      - env:
        - name: TZ
          value: Australia/Perth
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/radarr:3.0.2.4552-ls96
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:7878/radarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}'
              </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: radarr
        ports:
        - containerPort: 7878
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:7878/radarr/api/system/status?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config && chown -R 1000:1000 /movies
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
      - args:
        - echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/radarr</UrlBase></Config>'>
          /config/config.xml;echo end;
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: sonarr
  name: sonarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: sonarr
  template:
    metadata:
      labels:
        app: htpc
        run: sonarr
    spec:
      containers:
      - env:
        - name: TZ
          value: Australia/Perth
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/sonarr:2.0.0.5344-ls96
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:8989/sonarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}'
              </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: sonarr
        ports:
        - containerPort: 8989
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:8989/sonarr/api/system/status?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config && chown -R 1000:1000 /tv
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
      - args:
        - echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/sonarr</UrlBase></Config>'>
          /config/config.xml;echo end;
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: transmission
  name: transmission
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: transmission
  template:
    metadata:
      labels:
        app: htpc
        run: transmission
    spec:
      containers:
      - env:
        - name: TZ
          value: Australia/Perth
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/transmission:3.00-r2-ls80
        name: transmission
        ports:
        - containerPort: 9091
          name: webui
          protocol: TCP
        - containerPort: 51413
          name: torrent-tcp
          protocol: TCP
        - containerPort: 51413
          name: torrent-udp
          protocol: UDP
        resources: {}
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: transmission
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
        - mountPath: /watch
          name: htpc-home
          subPath: watch
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: transmission
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
        - mountPath: /watch
          name: htpc-home
          subPath: watch
      - args:
        - 'echo starting; echo ''{"download-dir": "/downloads", "rpc-whitelist-enabled":
          false, "rpc-host-whitelist-enabled": false}'' > /config/settings.json; echo
          done;'
        command:
        - sh
        - -c
        image: busybox
        name: setup-transmission
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: transmission
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: htpc
  name: htpc
  namespace: htpc
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: emby
          servicePort: webui
        path: /
      - backend:
          serviceName: jackett
          servicePort: webui
        path: /jackett
      - backend:
          serviceName: sonarr
          servicePort: webui
        path: /sonarr
      - backend:
          serviceName: radarr
          servicePort: webui
        path: /radarr
      - backend:
          serviceName: bazarr
          servicePort: webui
        path: /bazarr
      - backend:
          serviceName: transmission
          servicePort: webui
        path: /transmission
